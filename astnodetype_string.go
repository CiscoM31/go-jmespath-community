// Code generated by "stringer -type astNodeType"; DO NOT EDIT.

package jmespath

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ASTEmpty-0]
	_ = x[ASTComparator-1]
	_ = x[ASTCurrentNode-2]
	_ = x[ASTRootNode-3]
	_ = x[ASTExpRef-4]
	_ = x[ASTFunctionExpression-5]
	_ = x[ASTField-6]
	_ = x[ASTFilterProjection-7]
	_ = x[ASTFlatten-8]
	_ = x[ASTIdentity-9]
	_ = x[ASTIndex-10]
	_ = x[ASTIndexExpression-11]
	_ = x[ASTKeyValPair-12]
	_ = x[ASTLiteral-13]
	_ = x[ASTMultiSelectHash-14]
	_ = x[ASTMultiSelectList-15]
	_ = x[ASTOrExpression-16]
	_ = x[ASTAndExpression-17]
	_ = x[ASTNotExpression-18]
	_ = x[ASTPipe-19]
	_ = x[ASTProjection-20]
	_ = x[ASTSubexpression-21]
	_ = x[ASTSlice-22]
	_ = x[ASTValueProjection-23]
}

const _astNodeType_name = "ASTEmptyASTComparatorASTCurrentNodeASTRootNodeASTExpRefASTFunctionExpressionASTFieldASTFilterProjectionASTFlattenASTIdentityASTIndexASTIndexExpressionASTKeyValPairASTLiteralASTMultiSelectHashASTMultiSelectListASTOrExpressionASTAndExpressionASTNotExpressionASTPipeASTProjectionASTSubexpressionASTSliceASTValueProjection"

var _astNodeType_index = [...]uint16{0, 8, 21, 35, 46, 55, 76, 84, 103, 113, 124, 132, 150, 163, 173, 191, 209, 224, 240, 256, 263, 276, 292, 300, 318}

func (i astNodeType) String() string {
	if i < 0 || i >= astNodeType(len(_astNodeType_index)-1) {
		return "astNodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _astNodeType_name[_astNodeType_index[i]:_astNodeType_index[i+1]]
}
