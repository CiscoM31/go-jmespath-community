// Code generated by "stringer -type astNodeType"; DO NOT EDIT.

package jmespath

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ASTEmpty-0]
	_ = x[ASTArithmeticExpression-1]
	_ = x[ASTArithmeticUnaryExpression-2]
	_ = x[ASTComparator-3]
	_ = x[ASTCurrentNode-4]
	_ = x[ASTExpRef-5]
	_ = x[ASTFunctionExpression-6]
	_ = x[ASTField-7]
	_ = x[ASTFilterProjection-8]
	_ = x[ASTFlatten-9]
	_ = x[ASTIdentity-10]
	_ = x[ASTIndex-11]
	_ = x[ASTIndexExpression-12]
	_ = x[ASTKeyValPair-13]
	_ = x[ASTLiteral-14]
	_ = x[ASTMultiSelectHash-15]
	_ = x[ASTMultiSelectList-16]
	_ = x[ASTOrExpression-17]
	_ = x[ASTAndExpression-18]
	_ = x[ASTNotExpression-19]
	_ = x[ASTPipe-20]
	_ = x[ASTProjection-21]
	_ = x[ASTSubexpression-22]
	_ = x[ASTSlice-23]
	_ = x[ASTValueProjection-24]
}

const _astNodeType_name = "ASTEmptyASTArithmeticExpressionASTArithmeticUnaryExpressionASTComparatorASTCurrentNodeASTExpRefASTFunctionExpressionASTFieldASTFilterProjectionASTFlattenASTIdentityASTIndexASTIndexExpressionASTKeyValPairASTLiteralASTMultiSelectHashASTMultiSelectListASTOrExpressionASTAndExpressionASTNotExpressionASTPipeASTProjectionASTSubexpressionASTSliceASTValueProjection"

var _astNodeType_index = [...]uint16{0, 8, 31, 59, 72, 86, 95, 116, 124, 143, 153, 164, 172, 190, 203, 213, 231, 249, 264, 280, 296, 303, 316, 332, 340, 358}

func (i astNodeType) String() string {
	if i < 0 || i >= astNodeType(len(_astNodeType_index)-1) {
		return "astNodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _astNodeType_name[_astNodeType_index[i]:_astNodeType_index[i+1]]
}
